{"version":3,"sources":["role.harvester.js"],"names":[],"mappings":"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","file":"role.harvester-compiled.js","sourcesContent":["var roleHarvester = {\r\n\r\n    /** @param {Creep} creep **/\r\n    run: function(creep, targetContainers = true) {\r\n        \r\n        if(creep.memory.distributing && creep.carry.energy == 0) {\r\n            creep.memory.distributing = false;\r\n            creep.say('harvest');\r\n        }\r\n\r\n        if(!creep.memory.distributing && creep.carry.energy == creep.carryCapacity) {\r\n            creep.memory.distributing = true;\r\n            creep.say('distribute');\r\n        }\r\n\r\n        if(!creep.memory.distributing) {\r\n            var sources = creep.room.find(FIND_SOURCES);\r\n            if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(sources[0], {visualizePathStyle: {stroke: '#ffaa00'}});\r\n            }\r\n        } else {\r\n            if (targetContainers){\r\n                var targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType == STRUCTURE_CONTAINER) &&\r\n                            structure.store.energy < structure.storeCapacity;\r\n                    }\r\n                });\r\n                if(targets.length > 0) {\r\n                    if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                        creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});\r\n                    }\r\n                } else {\r\n                    // If can store somewhere otherwise upgrade controller\r\n                    if(Game.rooms['E33N41'].energyAvailable <= Game.rooms['E33N41'].energyCapacityAvailable){\r\n                        if(creep.transfer(Game.spawns['Spawn1'], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                            creep.moveTo(Game.spawns['Spawn1']);\r\n                        }\r\n                    } else {\r\n                        if(creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                            creep.moveTo(creep.room.controller);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var targets = creep.room.find(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN) &&\r\n                            structure.energy < structure.energyCapacity;\r\n                    }\r\n                });\r\n                if(targets.length > 0) {\r\n                      if(creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                          creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});\r\n                      }\r\n                } else {\r\n                    var targets = creep.room.find(FIND_STRUCTURES, {\r\n                        filter: (structure) => {\r\n                            return (structure.structureType == STRUCTURE_TOWER) &&\r\n                                structure.energy < structure.energyCapacity;\r\n                        }\r\n                    });\r\n                    if(targets.length > 0) {\r\n                        if(creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                            creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});\r\n                        }\r\n                    } else {\r\n                        if(creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                            creep.moveTo(creep.room.controller);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\t}\r\n};\r\n\r\nmodule.exports = roleHarvester;\r\n"]}